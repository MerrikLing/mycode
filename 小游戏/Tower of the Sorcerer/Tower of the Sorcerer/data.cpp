#include"head.hpp"
//可以考虑把地图放进文档中，通过读文档来进行地图生成

Monster::Monster(int hp, int atk, int def, int exp, int gold,int is_skeleton=0) : hp(hp), atk(atk), def(def), exp(exp), money(gold),isSkeleton(is_skeleton) {

	// 这里可以添加一些初始化代码，如果需要的话
}

//创建对象
Monster GreenSlime(10, 7, 1, 5, 1);
Monster RedSlime(10, 10, 2, 10, 2);
Monster Bat(15, 15, 2, 15, 3);
Monster EvilWizard(40, 30, 3, 25, 7);
Monster Skeleton(50, 20, 5, 20, 5, IS_SKELETON);//宏表示十字架可让攻击翻倍
Monster SkeletonSoldier(80, 40, 7, 35, 10, IS_SKELETON);
Monster BoneWarrior(85, 100, 40, 40, 20, IS_SKELETON);
Monster SkeletonGeneral(100, 100, 40, 50, 40, IS_SKELETON);
Monster BloodWizard(60, 120, 7, 40, 25);
Monster BloodBat(40, 60, 2, 25, 15);
Monster Orc(100, 100, 10, 40, 40);
Monster DemonKing(700, 150, 15, 200, 100);
Monster DemonEmperor(1000, 150, 20, 500, 100);
//Monster Sele();


Player::Player()
{                    //初始：第一层 第六行 第二列 position[0] = 0; position[1] = 6;  position[2] = 4;
	                 //测试位置，公主房间 position[0] = 2; position[1] = 8;  position[2] = 2;
	position[0] = 0; position[1] = 6;  position[2] = 4;
	hp = 100;	hp_limit = hp;  atk = 5;	def = 0;   money = 0;
	Lv = 1;		Exp = 0;	yellow_key = 0;	blue_key = 0;
	red_key = 0; pickaxe = 0; killnumber = 0; enhancedAtk = 0;
	for (int i = 0;i< CAPACITY;i++)
	{
		backpack[i] = 0;
	}       //0,小恢复药水；1，中恢复药水；2，Apple；3，葡萄；4 鱼，5 神秘药剂， 6 十字架，7 鹰旗 

	//test
	//backpack[2] = 1;
	//backpack[3] = 1;
}


//地图，13*13，周围一圈为边界，中间的11*11为主地图r
//0 - border # 1 - wall # 2 - minor_healing_potion h  3 - modera_healing_potion H
// 4 - yellow key 'k'  5 - yellow door  'd' 
//6 - green slime  's '   7 - area	' '   8 - player P  
//10 magma M  11 upstairs +   12 downstairs -
//30及以后全是怪物  30 bat B   31 骷髅 S 

int Map[FLOOR][ROW][COL] = {
	{//1F
			{0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,17,30,7,4,9,5,7,2,7,30,7,0},
			{0,30,7,7,7,4,1,1,1,1,1,5,0},
			{0,7,7,4,6,7,1,7,7,30,2,7,0},
			{0,3,1,1,5,1,1,70,1,18,1,5,0},
			{0,7,1,51,7,4,1,20,3,21,71,7,0},
			{0,6,5,7,8,7,1,1,1,1,1,7,0},
			{0,9,1,2,7,3,18,7,11,7,5,30,0},
			{0,5,1,1,5,1,1,1,5,1,1,7,0},
			{0,7,7,9,7,6,7,9,30,9,1,7,0},
			{0,5,1,4,7,7,7,7,9,7,1,56,0},
			{0,3,1,2,20,4,4,7,7,7,5,7,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0}
	},

	{//2F
			{0,0,0,0,0,73,0,0,0,0,0,0,0},
			{0, 57,33,1, 3,7,1,7,7, 19,5,17,0},
			{0, 33,7,1,1,5,1,9,4,7,1,31,0},
			{0, 31,7,2,9,7,1,5,1, 1,1,31,0},
			{0,1, 7,30,7,7,6,7,7,7,5,7,0},
			{0, 30,7,1, 1,1,9,1,1, 1,1,30,0},
			{73, 7,30,1,31,7,7,1,50,51,1,5,0},
			{0, 7,7,1,58,1,5,1,12,7,56,7,0},
			{0, 32,7,1,31,7,7,1,1,1,1,1,0},
			{0, 5,1,1,1,5,1,1,7,32,30,30,0},
			{0, 7,7,68,7,30,7,7,33,1,7,7,0},
			{0,11,7,68,7,7,7,31,7,18,7,22,0},
			{0,0,0,0,0,0,0,0,73,0,0,0,0}
	},

	{//3
			{ 0,0,0,0,0,0,0,0,0,0,0,0,0 },
			{0,61,72,7,7,7,1,68,7,4,1,60,0},
			{0,72,72,7,7,7,1,70,7,4,1,18,0},
			{0,7,69,7,69,7,1,68,7,7,7,7,0},
			{0,71,72,70,72,71,1,70,7,71,69,71,0},
			{0,53,53,38,53,53,53,1,1,1,18,1,0},
			{0,7,7,7,7,7,53,4,7,71,7,71,0},
			{0,7,7,39,7,7,53,69,69,7,72,7,0},
			{0,7,7,7,7,7,53,7,7,71,7,71,0},
			{0,53,53,53,53,53,53,7,72,7,7,7,0},
			{0,7,7,7,70,7,69,7,7,7,70,68,0},
			{0,12,7,70,7,7,69,7,7,7,68,24,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0}
	},
		
	{//4
			{0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0, 72,54,18, 7,7,7,7,7, 1,72,7,0},
			{0, 7, 72,1,7,7,7,7,7,52,72,7,0},
			{0, 7, 72,1,7,7,39,7,7,1,72,7,0},
			{0, 7, 72,52,7,7,7,7,7,52,72,7,0},
			{0, 7,72,1, 52,1,52,1,52, 1,72, 7,0},
			{0, 7,72,72,72,72,72,72,72,72,72,7,0},
			{0, 7,7,7,7,7,7,7,7,7,7,7,0},
			{0, 12,7,7,7,7,7,7,7,7,7,7,0},
			{0, 7,7,7,7,7,7,7,7,7,7,7,0},
			{0, 7,7,7,7,7,7,7,7,7,7,72,0},
			{0, 7,7,7,7,7,7,7,7,7,72,17,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0}
	},

	{//2FA (5F),TwoA
			{0,0,0,0,0,0,0,0,0,0,0,0,0},
			{ 0,73,73,73,73,73,73,73,73,73,73,73,0 },
			{ 0,73,73,73,73,73,73,73,73,73,73,73,0 },
			{0,73,73,1,1,1,1,1,1,1,73,73,0},
			{0,73,73,1,2,7,26,7,4,1,73,73,0},
			{0,1,1,1,7,7,7,7,7,1,73,73,0},
			{73,7,7,18,7,7,7,55,7,1,73,73,0},
			{0,1,1,1,7,7,7,7,56,1,73,73,0},
			{0,73,73,1,7,65,7,7,66,1,73,73,0},
			{0,73,73,1,1,1,1,1,1,1,73,73,0},
			{ 0,73,73,73,73,73,73,73,73,73,73,73,0 },
			{ 0,73,73,73,73,73,73,73,73,73,73,73,0 },
			{0,0,0,0,0,0,0,0,0,0,0,0,0}
	},
	
	{//TwoB 5,6F
			{0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0, 3,19,7, 5,30,7,1,20, 7,32,17,0},
			{0, 7,9,7,1,7,31,5,7,7,7,32,0},
			{0, 5,1,74,1,5,1,1,1, 6,7,7,0},
			{0,59, 1,6,1,7,1,56,1,7,30,7,0},
			{0, 70,1,7, 1,68,1,5,1, 5,1,1,0},
			{0, 68,7,7,7,7,5,3,1,7,7,2,0},
			{0, 1,1,1,1,5,1,1,1,7,4,56,0},
			{0, 19,7,7,30,7,1,9,5,7,60,63,0},
			{0, 7,31,1,7,4,1,7,1,1,1,1,0},
			{0, 7,7,1,5,1,1,18,1,56,7,7,0},
			{0,7,30,7,2,9,7,6,7,7,7,7,73},
			{0,0,0,0,0,0,0,0,0,0,0,0,0}
	},

	{//TwoC 6,7F
			{0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0, 7,68,9, 7,7,7,9,6, 7,7,4,0},
			{0, 7, 1,1,71,1,5,1,1,56,7,7,73},
			{0, 7,19,1,19,1,9,7,1, 1,18,1,0},
			{0,68, 7,1,20,1,1,5,1,61,7,64,0},
			{0, 7,30,1, 7,56,1,7,5, 7,7, 7,0},
			{0, 1,5,1,1,1,1,70,1,1,1,5,0},
			{0, 7,7,1,3,7,1,56,1,3,1,68,0},
			{0, 7,1,1,1,5,1,1,1,5,1,7,0},
			{0, 7,1,20,70,68,1,68,68,2,7,7,0},
			{0, 7,1,5,1,7,7,7,1,7,7,32,0},
			{0,2,9,7,7,7,2,7,5,7,32,56,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0}
	},

	{//TwoD 7,8F
			{0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,7,32,5,7,7,7,69,5,7,68,2,0},
			{0,2,7,1,34,50,1,1,1,7,1,7,0},
			{0,1,5,1,19,62,1,3,1,68,1,19,0},
			{0,20,7,1,7,4,1,5,1,70,1,5,0},
			{0,7,32,1,1,18,1,7,7,7,2,7,0},
			{0,1,5,1,68,7,68,7,1,1,1,1,0},
			{0,68,7,1,7,1,1,1,1,7,68,20,0},
			{0,7,1,1,70,1,3,70,68,7,1,5,0},
			{0,7,7,7,7,1,1,1,1,7,7,7,0},
			{0,70,1,68,1,1,7,7,7,6,7,9,0},
			{0,4,1,6,30,7,7,7,7,1,7,56,0},
			{0,0,0,0,0,0,0,73,0,0,0,0,0}
	},

	{//ThreeD 8,9F。由TwoD上楼得
			{0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,74,7,32,7,7,7,68,7,7,6,4,0},
			{0,19,1,70,7,12,7,1,7,71,7,56,0},
			{0,5,1,1,6,1,1,1,1,1,1,1,0},
			{0,7,7,1,7,7,70,1,72,7,7,20,0},
			{0,7,71,1,5,1,7,1,7,71,7,7,0},
			{0,1,5,1,7,7,72,1,9,1,68,70,0},
			{0,2,7,1,7,1,1,1,7,1,70,68,0},
			{0,71,4,18,7,68,2,7,7,5,7,7,0},
			{0,5,1,1,1,1,1,1,18,1,72,72,0},
			{0,7,7,1,61,70,5,7,7,1,7,7,0},
			{0,24,7,5,7,7,1,29,7,5,7,19,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0}
	}
};